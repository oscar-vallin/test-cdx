mutation UserToken($userId: String!, $password: String!){
    passwordLogin(userId: $userId, password: $password){
        token
        session{
            id
            orgId
            userId
            defaultAuthorities
        }
    }
}

mutation CreateOrg($orgInfo: CreateOrgInput!){
    createOrg(orgInfo: $orgInfo){
        id
        orgId
        orgType
    }
}

mutation CreateUser($userInfo: CreateUserInput!, $personInfo: CreatePersonInput!){
    createUser(userInfo: $userInfo, personInfo: $personInfo){
        id
        email
        person{
            firstNm
            lastNm
        }
    }
}

mutation CreateAMGroup($amGroupInfo: CreateAMGroupInput!){
    createAMGroup(amGroupInfo: $amGroupInfo){
        id
        name
        description
        tmpl
        tmplUseAsIs
        policies{
            id
            name
        }
    }
}


mutation CreateAMPolicy($policyInfo: CreateAMPolicyInput!){
    createAMPolicy(policyInfo: $policyInfo){
        ...policyFragment
    }
}

query WorkPacketStatuses($orgSid: ID!, $dateRange: DateTimeRangeInput, $filter: WorkPacketStatusFilter){

    workPacketStatuses(orgSid: $orgSid, dateRange: $dateRange, filter: $filter){
        workOrderId
        timestamp
        planSponsorId
        detailsPath
        subClientPath
        inboundFilename
        vendorId
        step
        stepStatus
        packetStatus
        reprocessedBy
        reprocessAction
        recordHighlightCount
        recordHighlightType
        clientFileArchivePath
        vendorFileArchivePath
        supplementalFilesArchivePaths
        archiveOnly
        hasErrors
    }
}

query WorkPacketStatusDetails($orgSid: ID!, $workOrderID: String!){
    workPacketStatusDetails(orgSid: $orgSid, workOrderID: $workOrderID){
        workOrderID
        specId
        specImplName
        fingerPrint
        suppressBilling
        workStepStatus{
            stepStatus
            stepName
            stepType
            populationCount{
                value
            }
            transformedArchiveFile{
                value
            }
            stepFile{
                value
            }
            nvp{
                name
                value
            }
            recordCounts{
                totalCount
                showUser
                recordCount{
                    name
                    count
                }
            }
        }
        deliveredFile{
            filename
            fileSizeInBytes
            textSizeInBytes
            timeDelivered
            ftp{
                protocol
                host
                username
                folder
                port
            }
            kcurl{
                url
            }
        }
        extractParameters{
            originalParameter{
                ...extractParameterFragment
            }
            overriddenParameter{
                ...extractParameterFragment
            }
            derivedParameter{
                ...extractParameterFragment
            }
        }
        qualityChecks{
            sequenceCreationEvent{
                context
                unitId
                recordCreationEvent{
                    context
                    outerContext
                    unitId
                    error{
                        ...fieldCreationFragment
                    }
                    warning{
                        ...fieldCreationFragment
                    }
                    information{
                        ...fieldCreationFragment
                    }
                }
            }
        }
    }
}

query DashboardPeriods($orgSid: ID!){
    dashboardPeriods(orgSid: $orgSid){
        dailyCounts{
            ...dashPeriodCountsFragment
        }
        yesterdayCounts{
            ...dashPeriodCountsFragment
        }
        monthlyCounts{
            ...dashPeriodCountsFragment
        }
        lastMonthlyCounts{
            ...dashPeriodCountsFragment
        }
    }
}

query BeginLogin($userId: String!) {
    beginLogin(userId: $userId) {
        userId
        step
        redirectPath
        allowLostPassword
    }
}

query ChangeOwnPasswordPage{
    changeOwnPasswordPage{
        ruleGroup{
            numberOfCharacteristics
            rules{
                ...unionPasswordRule
                ... on PasswordRuleGroup {
                    numberOfCharacteristics
                    rules{
                        ...unionPasswordRule
                        ... on PasswordRuleGroup {
                            numberOfCharacteristics
                            rules{
                                ...unionPasswordRule
                                ... on PasswordRuleGroup {
                                    numberOfCharacteristics
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

fragment dashPeriodCountsFragment on DashboardPeriodCounts{
    vendorTransmissions{
        ...dashPeriodCountFragment
    }
    vendorTransmissionsBySpec{
        ...dashPeriodCountFragment
    }
    planSponsorTransmissions{
        ...dashPeriodCountFragment
    }
    fileTransmissions{
        ...dashPeriodCountFragment
    }
    vendorProcessErrors{
        ...dashPeriodCountFragment
    }
    planSponsorProcessErrors{
        ...dashPeriodCountFragment
    }
    fileProcessErrors{
        ...dashPeriodCountFragment
    }
    transmissionCount
    billingUnitCount
    processErrorCount
}

fragment dashPeriodCountFragment on DashboardPeriodCount{
    name
    secondaryDescr
    count
    total
}

fragment policyFragment on AMPolicy{
    id
    name
    tmpl
    tmplUseAsIs
    permissions {
        id
        effect
        predicate
        predVar1
        predParam1
        actions {
            id
            service
            facet
            verb
        }
    }
}

fragment extractParameterFragment on ExtractParameter{
    label
    name
    value
}

fragment fieldCreationFragment on FieldCreationEvent{
    message
    name
    id
    value
    rawValue
    type
}

fragment unionPasswordRule on PasswordRule{
    __typename
    ... on PasswordLengthRule {
        minLength
        maxLength
    }
    ... on PasswordStrengthRule {
        requiredStrengthLevel
    }
    ... on PasswordCharacterRule {
        characterType
        numberOfCharacters
    }
    ... on PasswordWhitespaceRule {
        allowedWhitespace
    }
}

query SystemTemplateAMGroupByName($name: String!){
    systemTemplateAMGroupByName(name: $name){
        id
        name
        description
        tmpl
        tmplUseAsIs
        tmplServiceType
    }
}